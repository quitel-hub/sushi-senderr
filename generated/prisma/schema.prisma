generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Customer {
  id            String                @id @default(cuid())
  firstName     String
  lastName      String
  phoneNumber   String                @unique
  email         String // Сделано обязательным
  birthDate     DateTime?
  city          String?
  street        String?
  postalCode    String?
  houseNumber   String?
  preferredFood String?
  feedback      String?
  country       String?
  discountCode  String                @unique
  createdAt     DateTime              @default(now())
  updatedAt     DateTime              @updatedAt
  subscriptions MessageSubscription[]

  // Поля для верификации email
  emailVerificationCode String?
  isEmailVerified       Boolean @default(false)
}

model Owner {
  id                    String              @id @default(cuid())
  email                 String              @unique
  name                  String
  accessCode            String              @unique
  password              String
  isActive              Boolean             @default(true)
  lastLogin             DateTime?
  createdAt             DateTime            @default(now())
  updatedAt             DateTime            @updatedAt
  loginSessions         OwnerLoginSession[]
  emailVerificationCode String?
  isEmailVerified       Boolean             @default(false)
}

model MessageSubscription {
  id         String            @id @default(cuid())
  customer   Customer          @relation(fields: [customerId], references: [id])
  customerId String
  subscribed Boolean           @default(true)
  createdAt  DateTime          @default(now())
  updatedAt  DateTime          @updatedAt
  deliveries MessageDelivery[]
}

model BroadcastMessage {
  id           String            @id @default(cuid()) // <- ИСПРАВЛЕНИЕ ЗДЕСЬ
  title        String
  body         String
  createdAt    DateTime          @default(now())
  scheduledFor DateTime?
  deliveries   MessageDelivery[]
}

model MessageDelivery {
  id             String              @id @default(cuid())
  message        BroadcastMessage    @relation(fields: [messageId], references: [id])
  messageId      String
  subscription   MessageSubscription @relation(fields: [subscriptionId], references: [id])
  subscriptionId String
  phoneNumber    String
  status         DeliveryStatus      @default(PENDING)
  sentAt         DateTime?
  errorMessage   String?
  createdAt      DateTime            @default(now())
  updatedAt      DateTime            @updatedAt
}

model OwnerLoginSession {
  id                String   @id @default(cuid())
  owner             Owner    @relation(fields: [ownerId], references: [id])
  ownerId           String
  deviceInfo        String?
  // Информация об устройстве (User-Agent)
  ipAddress         String? // IP адрес
  location          String?
  // Местоположение (город, страна)
  userAgent         String? // Полный User-Agent
  browser           String?
  // Браузер
  os                String?
  // Операционная система
  device            String?
  // Тип устройства (desktop, mobile, tablet)
  country           String?
  // Страна
  city              String? // Город
  latitude          Float?
  // Широта
  longitude         Float? // Долгота
  isSuccessful      Boolean  @default(true)
  loginAt           DateTime @default(now())
  timezone          String?
  // Часовой пояс
  isp               String?
  // Интернет-провайдер
  region            String? // Регион
  deviceType        String?
  // Тип устройства
  deviceModel       String? // Модель устройства
  browserName       String? // Название браузера
  browserVersion    String?
  // Версия браузера
  osName            String? // Название ОС
  osVersion         String?
  // Версия ОС
  countryCode       String? // Код страны
  regionCode        String?
  // Код региона
  postal            String? // Почтовый индекс
  currency          String?
  // Валюта
  currencyName      String? // Название валюты
  languages         String? // Языки
  countryPopulation Int?
  // Население страны
  countryArea       Int? // Площадь страны
  countryCapital    String? // Столица
  continent         String?
  // Континент
  isEu              Boolean? // Входит в ЕС
  callingCode       String?
  // Телефонный код
  utcOffset         String? // Смещение UTC
}

model FormDraft {
  id            String   @id @default(cuid())
  firstName     String?
  lastName      String?
  phoneNumber   String?
  email         String?
  city          String?
  street        String?
  postalCode    String?
  houseNumber   String?
  country       String?
  preferredFood String?
  feedback      String?
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

enum DeliveryStatus {
  PENDING
  SENT
  FAILED
}
