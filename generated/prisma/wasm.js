
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('./runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.CustomerScalarFieldEnum = {
  id: 'id',
  firstName: 'firstName',
  lastName: 'lastName',
  phoneNumber: 'phoneNumber',
  email: 'email',
  birthDate: 'birthDate',
  city: 'city',
  street: 'street',
  postalCode: 'postalCode',
  houseNumber: 'houseNumber',
  preferredFood: 'preferredFood',
  feedback: 'feedback',
  country: 'country',
  discountCode: 'discountCode',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  emailVerificationCode: 'emailVerificationCode',
  isEmailVerified: 'isEmailVerified'
};

exports.Prisma.OwnerScalarFieldEnum = {
  id: 'id',
  email: 'email',
  name: 'name',
  accessCode: 'accessCode',
  password: 'password',
  isActive: 'isActive',
  lastLogin: 'lastLogin',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt',
  emailVerificationCode: 'emailVerificationCode',
  isEmailVerified: 'isEmailVerified'
};

exports.Prisma.MessageSubscriptionScalarFieldEnum = {
  id: 'id',
  customerId: 'customerId',
  subscribed: 'subscribed',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.BroadcastMessageScalarFieldEnum = {
  id: 'id',
  title: 'title',
  body: 'body',
  createdAt: 'createdAt',
  scheduledFor: 'scheduledFor'
};

exports.Prisma.MessageDeliveryScalarFieldEnum = {
  id: 'id',
  messageId: 'messageId',
  subscriptionId: 'subscriptionId',
  phoneNumber: 'phoneNumber',
  status: 'status',
  sentAt: 'sentAt',
  errorMessage: 'errorMessage',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.OwnerLoginSessionScalarFieldEnum = {
  id: 'id',
  ownerId: 'ownerId',
  deviceInfo: 'deviceInfo',
  ipAddress: 'ipAddress',
  location: 'location',
  userAgent: 'userAgent',
  browser: 'browser',
  os: 'os',
  device: 'device',
  country: 'country',
  city: 'city',
  latitude: 'latitude',
  longitude: 'longitude',
  isSuccessful: 'isSuccessful',
  loginAt: 'loginAt',
  timezone: 'timezone',
  isp: 'isp',
  region: 'region',
  deviceType: 'deviceType',
  deviceModel: 'deviceModel',
  browserName: 'browserName',
  browserVersion: 'browserVersion',
  osName: 'osName',
  osVersion: 'osVersion',
  countryCode: 'countryCode',
  regionCode: 'regionCode',
  postal: 'postal',
  currency: 'currency',
  currencyName: 'currencyName',
  languages: 'languages',
  countryPopulation: 'countryPopulation',
  countryArea: 'countryArea',
  countryCapital: 'countryCapital',
  continent: 'continent',
  isEu: 'isEu',
  callingCode: 'callingCode',
  utcOffset: 'utcOffset'
};

exports.Prisma.FormDraftScalarFieldEnum = {
  id: 'id',
  firstName: 'firstName',
  lastName: 'lastName',
  phoneNumber: 'phoneNumber',
  email: 'email',
  city: 'city',
  street: 'street',
  postalCode: 'postalCode',
  houseNumber: 'houseNumber',
  country: 'country',
  preferredFood: 'preferredFood',
  feedback: 'feedback',
  createdAt: 'createdAt',
  updatedAt: 'updatedAt'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.DeliveryStatus = exports.$Enums.DeliveryStatus = {
  PENDING: 'PENDING',
  SENT: 'SENT',
  FAILED: 'FAILED'
};

exports.Prisma.ModelName = {
  Customer: 'Customer',
  Owner: 'Owner',
  MessageSubscription: 'MessageSubscription',
  BroadcastMessage: 'BroadcastMessage',
  MessageDelivery: 'MessageDelivery',
  OwnerLoginSession: 'OwnerLoginSession',
  FormDraft: 'FormDraft'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "C:\\Users\\quitel\\Projects\\sushi-senderr\\generated\\prisma",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "windows",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "C:\\Users\\quitel\\Projects\\sushi-senderr\\prisma\\schema.prisma",
    "isCustomOutput": true
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../.env"
  },
  "relativePath": "../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "generator client {\n  provider = \"prisma-client-js\"\n  output   = \"../generated/prisma\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel Customer {\n  id            String                @id @default(cuid())\n  firstName     String\n  lastName      String\n  phoneNumber   String                @unique\n  email         String // Сделано обязательным\n  birthDate     DateTime?\n  city          String?\n  street        String?\n  postalCode    String?\n  houseNumber   String?\n  preferredFood String?\n  feedback      String?\n  country       String?\n  discountCode  String                @unique\n  createdAt     DateTime              @default(now())\n  updatedAt     DateTime              @updatedAt\n  subscriptions MessageSubscription[]\n\n  // Поля для верификации email\n  emailVerificationCode String?\n  isEmailVerified       Boolean @default(false)\n}\n\nmodel Owner {\n  id                    String              @id @default(cuid())\n  email                 String              @unique\n  name                  String\n  accessCode            String              @unique\n  password              String\n  isActive              Boolean             @default(true)\n  lastLogin             DateTime?\n  createdAt             DateTime            @default(now())\n  updatedAt             DateTime            @updatedAt\n  loginSessions         OwnerLoginSession[]\n  emailVerificationCode String?\n  isEmailVerified       Boolean             @default(false)\n}\n\nmodel MessageSubscription {\n  id         String            @id @default(cuid())\n  customer   Customer          @relation(fields: [customerId], references: [id])\n  customerId String\n  subscribed Boolean           @default(true)\n  createdAt  DateTime          @default(now())\n  updatedAt  DateTime          @updatedAt\n  deliveries MessageDelivery[]\n}\n\nmodel BroadcastMessage {\n  id           String            @id @default(cuid()) // <- ИСПРАВЛЕНИЕ ЗДЕСЬ\n  title        String\n  body         String\n  createdAt    DateTime          @default(now())\n  scheduledFor DateTime?\n  deliveries   MessageDelivery[]\n}\n\nmodel MessageDelivery {\n  id             String              @id @default(cuid())\n  message        BroadcastMessage    @relation(fields: [messageId], references: [id])\n  messageId      String\n  subscription   MessageSubscription @relation(fields: [subscriptionId], references: [id])\n  subscriptionId String\n  phoneNumber    String\n  status         DeliveryStatus      @default(PENDING)\n  sentAt         DateTime?\n  errorMessage   String?\n  createdAt      DateTime            @default(now())\n  updatedAt      DateTime            @updatedAt\n}\n\nmodel OwnerLoginSession {\n  id                String   @id @default(cuid())\n  owner             Owner    @relation(fields: [ownerId], references: [id])\n  ownerId           String\n  deviceInfo        String?\n  // Информация об устройстве (User-Agent)\n  ipAddress         String? // IP адрес\n  location          String?\n  // Местоположение (город, страна)\n  userAgent         String? // Полный User-Agent\n  browser           String?\n  // Браузер\n  os                String?\n  // Операционная система\n  device            String?\n  // Тип устройства (desktop, mobile, tablet)\n  country           String?\n  // Страна\n  city              String? // Город\n  latitude          Float?\n  // Широта\n  longitude         Float? // Долгота\n  isSuccessful      Boolean  @default(true)\n  loginAt           DateTime @default(now())\n  timezone          String?\n  // Часовой пояс\n  isp               String?\n  // Интернет-провайдер\n  region            String? // Регион\n  deviceType        String?\n  // Тип устройства\n  deviceModel       String? // Модель устройства\n  browserName       String? // Название браузера\n  browserVersion    String?\n  // Версия браузера\n  osName            String? // Название ОС\n  osVersion         String?\n  // Версия ОС\n  countryCode       String? // Код страны\n  regionCode        String?\n  // Код региона\n  postal            String? // Почтовый индекс\n  currency          String?\n  // Валюта\n  currencyName      String? // Название валюты\n  languages         String? // Языки\n  countryPopulation Int?\n  // Население страны\n  countryArea       Int? // Площадь страны\n  countryCapital    String? // Столица\n  continent         String?\n  // Континент\n  isEu              Boolean? // Входит в ЕС\n  callingCode       String?\n  // Телефонный код\n  utcOffset         String? // Смещение UTC\n}\n\nmodel FormDraft {\n  id            String   @id @default(cuid())\n  firstName     String?\n  lastName      String?\n  phoneNumber   String?\n  email         String?\n  city          String?\n  street        String?\n  postalCode    String?\n  houseNumber   String?\n  country       String?\n  preferredFood String?\n  feedback      String?\n  createdAt     DateTime @default(now())\n  updatedAt     DateTime @updatedAt\n}\n\nenum DeliveryStatus {\n  PENDING\n  SENT\n  FAILED\n}\n",
  "inlineSchemaHash": "c68269a79dc66a372a52fc2b20cec458fcfeb832f3675eaebaa9e2cd1d2f0c15",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"Customer\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phoneNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"birthDate\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"street\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"postalCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"houseNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"preferredFood\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"feedback\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"discountCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"subscriptions\",\"kind\":\"object\",\"type\":\"MessageSubscription\",\"relationName\":\"CustomerToMessageSubscription\"},{\"name\":\"emailVerificationCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isEmailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"}],\"dbName\":null},\"Owner\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"name\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"accessCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"password\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isActive\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"lastLogin\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"loginSessions\",\"kind\":\"object\",\"type\":\"OwnerLoginSession\",\"relationName\":\"OwnerToOwnerLoginSession\"},{\"name\":\"emailVerificationCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isEmailVerified\",\"kind\":\"scalar\",\"type\":\"Boolean\"}],\"dbName\":null},\"MessageSubscription\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"customer\",\"kind\":\"object\",\"type\":\"Customer\",\"relationName\":\"CustomerToMessageSubscription\"},{\"name\":\"customerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subscribed\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deliveries\",\"kind\":\"object\",\"type\":\"MessageDelivery\",\"relationName\":\"MessageDeliveryToMessageSubscription\"}],\"dbName\":null},\"BroadcastMessage\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"title\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"body\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"scheduledFor\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"deliveries\",\"kind\":\"object\",\"type\":\"MessageDelivery\",\"relationName\":\"BroadcastMessageToMessageDelivery\"}],\"dbName\":null},\"MessageDelivery\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"message\",\"kind\":\"object\",\"type\":\"BroadcastMessage\",\"relationName\":\"BroadcastMessageToMessageDelivery\"},{\"name\":\"messageId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"subscription\",\"kind\":\"object\",\"type\":\"MessageSubscription\",\"relationName\":\"MessageDeliveryToMessageSubscription\"},{\"name\":\"subscriptionId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phoneNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"status\",\"kind\":\"enum\",\"type\":\"DeliveryStatus\"},{\"name\":\"sentAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"errorMessage\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null},\"OwnerLoginSession\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"owner\",\"kind\":\"object\",\"type\":\"Owner\",\"relationName\":\"OwnerToOwnerLoginSession\"},{\"name\":\"ownerId\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deviceInfo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"ipAddress\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"location\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"userAgent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"browser\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"os\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"device\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"latitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"longitude\",\"kind\":\"scalar\",\"type\":\"Float\"},{\"name\":\"isSuccessful\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"loginAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"timezone\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isp\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"region\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deviceType\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"deviceModel\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"browserName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"browserVersion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"osName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"osVersion\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"countryCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"regionCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"postal\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currency\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"currencyName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"languages\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"countryPopulation\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"countryArea\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"countryCapital\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"continent\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"isEu\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"callingCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"utcOffset\",\"kind\":\"scalar\",\"type\":\"String\"}],\"dbName\":null},\"FormDraft\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"firstName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"lastName\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"phoneNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"email\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"city\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"street\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"postalCode\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"houseNumber\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"country\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"preferredFood\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"feedback\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"createdAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"updatedAt\",\"kind\":\"scalar\",\"type\":\"DateTime\"}],\"dbName\":null}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

